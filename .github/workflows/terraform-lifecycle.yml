name: Terraform Deployment

on:
  push:
    branches:
      - main
    tags:
      - 'deploy-dev'
      - 'deploy-prod'
  workflow_dispatch:
    inputs:
      stage:
        description: 'Deployment Stage (Dev or Prod)'
        required: true
        default: 'dev'
      destroy:
        description: 'Set to true to destroy infrastructure'
        required: false
        default: 'false'

jobs:
  terraform:
    name: Terraform Plan & Apply/Destroy
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      TF_INPUT: false
      TF_IN_AUTOMATION: true

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.3

    - name: Set STAGE variable
      id: vars
      run: echo "STAGE=${{ github.event.inputs.stage || (startsWith(github.ref, 'refs/tags/deploy-') && split(github.ref, 'deploy-')[1]) || 'dev' }}" >> "$GITHUB_ENV"

    - name: Terraform Init
      run: terraform init -backend-config="key=${STAGE}.tfstate"

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -var-file="${STAGE}_config.tfvars"

    - name: Terraform Apply or Destroy
      if: ${{ github.event.inputs.destroy == 'true' }}
      run: terraform destroy -auto-approve -var-file="${STAGE}_config.tfvars"

    - name: Terraform Apply
      if: ${{ github.event.inputs.destroy != 'true' }}
      run: terraform apply -auto-approve -var-file="${STAGE}_config.tfvars"
